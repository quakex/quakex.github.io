<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>读书-非暴力沟通</title>
      <link href="/2020/02/29/%E8%AF%BB%E4%B9%A6-%E9%9D%9E%E6%9A%B4%E5%8A%9B%E6%B2%9F%E9%80%9A/"/>
      <url>/2020/02/29/%E8%AF%BB%E4%B9%A6-%E9%9D%9E%E6%9A%B4%E5%8A%9B%E6%B2%9F%E9%80%9A/</url>
      
        <content type="html"><![CDATA[<h2 id="《非暴力沟通》讲什么"><a href="#《非暴力沟通》讲什么" class="headerlink" title="《非暴力沟通》讲什么"></a>《非暴力沟通》讲什么</h2><p><strong>要说出自己的观察，加上自己的感受，沟通自己的需求，并且请求对方行动</strong></p><h3 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h3><p>1.儿子，我看见你光着脚在地上跑。现在已经是冬天了，地板上非常冷。（客观观察）</p><p>2.我感到非常着急，非常心疼，还有一点害怕。（我的感受）</p><p>3.我很重视你的健康，想要能保证你的健康，避开生病之苦。（我的需要）</p><p>4.请你把袜子、鞋子穿上,，再去玩好吗？（明确的请求）</p><p>你能够从对方的表达中，听到对方背后的需求，才能真正地非暴力沟通。</p><h3 id="还是忍不住生气怎么办："><a href="#还是忍不住生气怎么办：" class="headerlink" title="还是忍不住生气怎么办："></a>还是忍不住生气怎么办：</h3><p>遇到以上情况，请默念：我”之所以愤怒，是因为“我”还有未被满足的需要！</p><p>不必讨论如何忍耐。因为忍不住要发怒，只是我们现在的行事的习惯。</p><p>重要的是，请在事后抓住它，正视它。</p><p>要拿出勇气，探索愤怒背后到底有什么“未被满足的需要”。</p><p>正视这种需要，才是根本之道。</p><p>『内观』</p><ul><li>找到发怒的真正需求，反省是否合理，是否有价值。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0228-日子</title>
      <link href="/2020/02/28/0228-%E9%9D%9E%E6%9A%B4%E5%8A%9B%E6%B2%9F%E9%80%9A/"/>
      <url>/2020/02/28/0228-%E9%9D%9E%E6%9A%B4%E5%8A%9B%E6%B2%9F%E9%80%9A/</url>
      
        <content type="html"><![CDATA[<ul><li><p>不要在网上争论，没有任何意义，不要试图去改变别人的观念，没有那个必要，只有坏处，没有任何好处。切记。比如中医之争、朋友圈里的各种垃圾文章。</p><blockquote><p>“不带评论的观察是人类智力的最高形式” ——克里希那穆提</p></blockquote></li><li><p>学会并改进和儿子、老婆的沟通方式，看看《非暴力沟通》。内观、正念、倾听、沟通。</p></li><li><p>减少看八卦、资讯的时间。了解各种资讯没什么卵用，除了带来虚假的渊博感，其实本质上还是狗屁不懂，经不起问，一问底裤就露出来。资讯就和嗑瓜子似的，短时快感。是浪费时间，逃避现实的一种方式。难的、有意思的东西都需要深度学习。切记。</p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 日子 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0227-学习如何学习</title>
      <link href="/2020/02/27/0227-%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0/"/>
      <url>/2020/02/27/0227-%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>每天要写点东西，否则这日子过得像狗屎。</p><h2 id="如何提高学习的效率"><a href="#如何提高学习的效率" class="headerlink" title="如何提高学习的效率"></a>如何提高学习的效率</h2><h3 id="在知道之前使用它"><a href="#在知道之前使用它" class="headerlink" title="在知道之前使用它"></a>在知道之前使用它</h3><p>先用，建立感性认识，用 2/8 法则，20%的事件了解 80%的内容，剩下的难的 20%慢慢了解。</p><blockquote><p>看视频，写每一行代码，在编写过程中观看，每一步都能运行起来。<br>10 分钟的视频往往需要一个小时。（原来大家都这样啊，我还以为只有我自己这么笨）<br>开始学习前，远离书和文档<br>遇到不懂的地方，记下来，写篇 blog。<br>发现你未掌握的知识。</p></blockquote><h3 id="解决难题"><a href="#解决难题" class="headerlink" title="解决难题"></a>解决难题</h3><blockquote><p>找到所有能解决，或者让你理解这个难题的资料。（库布里克学习法）<br>回退，学习基础资料，然后再学习。</p></blockquote><h3 id="使用学到的技术，做个东西"><a href="#使用学到的技术，做个东西" class="headerlink" title="使用学到的技术，做个东西"></a>使用学到的技术，做个东西</h3><blockquote><p>不用掌握所有知识后再动手<br>找到兴趣点，然后写一个小项目</p></blockquote><p>三个步骤会互相融合，并不是线性发生的。</p><h2 id="每日反省"><a href="#每日反省" class="headerlink" title="每日反省"></a>每日反省</h2><ol><li>减少电子产品的使用，晚上看书。《代码大全》买了 10 来年了都没看完。shit。</li><li>少吵架，吵架没有赢家。</li><li>早睡早起。</li><li>陪儿子才是正事。</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 日子 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>railscast-study-2</title>
      <link href="/2019/10/25/railscast-study-2/"/>
      <url>/2019/10/25/railscast-study-2/</url>
      
        <content type="html"><![CDATA[<h2 id="08-Layouts-and-content-for"><a href="#08-Layouts-and-content-for" class="headerlink" title="#08 Layouts and content_for"></a>#08 Layouts and content_for</h2><p>content_for 用于定制网页特定的内容，</p><p>content_for 接受一个名称参数及代码块定义。代码块逻辑生成的内容将会被加载到布局文件中。</p><p>content_for 为我们提供在 Action 中定制布局文件定义的能力。诸如为某些指定的 Action 中增加用于显示菜单，滚动条等效果的 CSS 引用等。</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- projects/index.rhtml --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">content_for</span> <span class="attr">:head</span> <span class="attr">do</span> %&gt;</span> <span class="tag">&lt;<span class="name">%=</span> <span class="attr">stylesheet_link_tag</span> '<span class="attr">projects</span>' %&gt;</span> <span class="tag">&lt;<span class="name">%</span> <span class="attr">end</span> %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- layouts/application.rhtml --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Todo List<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%=</span> <span class="attr">stylesheet_link_tag</span> '<span class="attr">application</span>' %&gt;</span> <span class="tag">&lt;<span class="name">%=</span> <span class="attr">yield</span> <span class="attr">:head</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="10-11-12-Refactoring-User-Name"><a href="#10-11-12-Refactoring-User-Name" class="headerlink" title="#10 11 12 Refactoring User Name"></a>#10 11 12 Refactoring User Name</h2><h3 id="重构"><a href="#重构" class="headerlink" title="重构"></a>重构</h3><p>把通用的逻辑抽取到一个工具方法中。</p><p>页面 view 中重复的逻辑，抽取到了 model 中。</p><p>需要重构的页面代码</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Users<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%</span> <span class="attr">for</span> <span class="attr">user</span> <span class="attr">in</span> @<span class="attr">users</span> %&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%= user_path(user) %&gt;"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">%=</span> <span class="attr">user.first_name</span> %&gt;</span> <span class="tag">&lt;<span class="name">%=</span> "#{<span class="attr">user.middle_initial</span>}<span class="attr">.</span>" <span class="attr">unless</span></span></span><br><span class="line"><span class="tag">      <span class="attr">user.middle_initial.nil</span>? %&gt;</span> <span class="tag">&lt;<span class="name">%=</span> <span class="attr">user.last_name</span> %&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%</span> <span class="attr">end</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>资料页面</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;Profile&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;</span></span><br><span class="line"><span class="regexp">  Name:</span></span><br><span class="line"><span class="regexp">  &lt;%= @user.first_name %&gt;</span></span><br><span class="line"><span class="regexp">  &lt;%= "<span class="subst">#{@user.middle_initial}</span>." unless @user.middle_initial.nil? %&gt;</span></span><br><span class="line"><span class="regexp">  &lt;%= @user.last_name %&gt;</span></span><br><span class="line"><span class="regexp">&lt;/p</span>&gt;</span><br><span class="line">&lt;%= link_to <span class="string">'Users List'</span>, users_path %&gt;</span><br></pre></td></tr></tbody></table></figure><p>两处代码中出现重复的内容，这时候就需要重构了。</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> &lt; ActiveRecord::Base</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">full_name</span></span></span><br><span class="line">    name = first_name + <span class="string">' '</span></span><br><span class="line">      name += <span class="string">"<span class="subst">#{middle_initial}</span>. "</span> <span class="keyword">unless</span> middle_initial.<span class="literal">nil</span>?</span><br><span class="line">      name += last_name</span><br><span class="line">      name</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">&lt;h1&gt;Users&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">&lt;ul&gt;</span></span><br><span class="line"><span class="regexp">&lt;% for user in @users %&gt;</span></span><br><span class="line"><span class="regexp">    &lt;li&gt;&lt;%= link_to user.full_name %&gt;&lt;/li</span>&gt;</span><br><span class="line">&lt;% <span class="keyword">end</span> %&gt;</span><br><span class="line">&lt;<span class="regexp">/ul&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>有<a>标签的都用 link_to.</a></p><p>用测试来保障重构。</p><p>ruby 有 ruby 的编程方法，和 c 系语言完全不同，区别的根源就是迭代器的使用。</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> &lt; ActiveRecord::Base</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">full_name</span></span></span><br><span class="line">    [first_name, middle_initial_with_full_stop, last_name].compact.join(<span class="string">' '</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">middle_initial_with_full_stop</span></span></span><br><span class="line">    <span class="string">"<span class="subst">#{middle_initial}</span>."</span> <span class="keyword">unless</span> middle_initial.blank?</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> railscast </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>railscast 学习</title>
      <link href="/2019/10/23/railscast-101/"/>
      <url>/2019/10/23/railscast-101/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Caching-with-Instance-Variables"><a href="#1-Caching-with-Instance-Variables" class="headerlink" title="#1 Caching with Instance Variables"></a>#1 Caching with Instance Variables</h2><p>尽量少用数据库查询，查询出来的东西能复用的要复用。怎么复用？保存在实例变量中。</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ApplicationController</span> &amp;<span class="title">lt</span>;</span> ActionController::Base</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">current_user</span></span></span><br><span class="line">    @current_user <span class="params">||</span>= User.find(session[<span class="symbol">:user_id</span>]) <span class="comment"># 这里面的逻辑还是有点绕的</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></tbody></table></figure><h2 id="2-Dynamic-find-by-Methods"><a href="#2-Dynamic-find-by-Methods" class="headerlink" title="#2 Dynamic find_by Methods"></a>#2 Dynamic find_by Methods</h2><p>过时了，现在都直接用 find_by.</p><h2 id="3-Find-Through-Association"><a href="#3-Find-Through-Association" class="headerlink" title="#3 Find Through Association"></a>#3 Find Through Association</h2><p>seeds.rb : 可以做些复杂的事情。</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">happy = Project.create(<span class="symbol">name:</span> <span class="string">'Be Happy'</span>)</span><br><span class="line">happy.tasks.create(<span class="symbol">name:</span> <span class="string">'Buy a puppy'</span>, <span class="symbol">complete:</span> <span class="literal">false</span>)</span><br><span class="line">happy.tasks.create(<span class="symbol">name:</span> <span class="string">'Dance in the rain'</span>, <span class="symbol">complete:</span> <span class="literal">true</span>)</span><br></pre></td></tr></tbody></table></figure><p>找到第一个 project 中未完成的任务：</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = Task.where(<span class="symbol">project_id:</span> <span class="number">1</span>).where(<span class="symbol">complete:</span> <span class="literal">false</span>) <span class="comment">#方法1</span></span><br><span class="line"></span><br><span class="line">p = Project.find <span class="number">1</span></span><br><span class="line">p.tasks.where(<span class="symbol">complete:</span> <span class="literal">false</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="4-Move-Find-into-Model"><a href="#4-Move-Find-into-Model" class="headerlink" title="#4 Move Find into Model"></a>#4 Move Find into Model</h2><p>index action 中，排序查找什么的，不要放在 controller 中了，model 的事情交给 model 做，这样 controller 中如果有多个地方想用这个查询，放在模型中就可以复用这个查询代码了。<br>注意模型中，是类方法，方法名前面加 self。<br>新版本中用 scopes 取代了这种方法，代码量小的可以用，更简洁。</p><h2 id="5-scope"><a href="#5-scope" class="headerlink" title="#5 scope"></a>#5 scope</h2><p>scope 将常用的查询条件定义成方法。</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Post</span> &lt; ActiveRecord::Base</span></span><br><span class="line">  scope <span class="symbol">:published</span>, -&gt; { where(<span class="symbol">published:</span> <span class="literal">true</span>) }</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Post</span> &lt; ActiveRecord::Base</span></span><br><span class="line">  scope <span class="symbol">:created_before</span>, -&gt;(time) { where(<span class="string">"created_at &lt; ?"</span>, time) }</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">Post.created_before(Time.zone.now) <span class="comment">#需要动态参数时，还是用方法比较合适。</span></span><br></pre></td></tr></tbody></table></figure><h2 id="7-Layouts"><a href="#7-Layouts" class="headerlink" title="#7 Layouts"></a>#7 Layouts</h2><h3 id="动态布局"><a href="#动态布局" class="headerlink" title="动态布局"></a>动态布局</h3><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsersController</span></span></span><br><span class="line"></span><br><span class="line">  layout  <span class="symbol">:choose_layout</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">index</span></span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">new</span></span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  protected</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">choose_layout</span></span></span><br><span class="line">    <span class="keyword">if</span> current_user.admin?</span><br><span class="line">      “admin”</span><br><span class="line">    elseif current_user.user?</span><br><span class="line">      “user”</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      “application”</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></tbody></table></figure><h3 id="指定布局"><a href="#指定布局" class="headerlink" title="指定布局"></a>指定布局</h3><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsersController</span></span></span><br><span class="line">  layout  “my_layout”</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsersController</span></span></span><br><span class="line">  layout  <span class="literal">nil</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsersController</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">index</span></span></span><br><span class="line">    render <span class="symbol">:layout</span> =&gt; <span class="string">'my_layout'</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsersController</span></span></span><br><span class="line">  layout  “my_layout”, : only =&gt;  <span class="symbol">:method_name</span></span><br><span class="line">  layout  “my_layout”, <span class="symbol">:except</span> =&gt; [ <span class="symbol">:my_method1</span>, <span class="symbol">:my_method2</span> ]</span><br><span class="line"></span><br><span class="line">  layout  <span class="symbol">:my_layout</span>,  : only =&gt; <span class="symbol">:my_method</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> railscast </tag>
            
            <tag> rails </tag>
            
            <tag> study </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
