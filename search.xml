<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>railscast-study-2</title>
      <link href="/2019/10/25/railscast-study-2/"/>
      <url>/2019/10/25/railscast-study-2/</url>
      
        <content type="html"><![CDATA[<h2 id="08-Layouts-and-content-for"><a href="#08-Layouts-and-content-for" class="headerlink" title="#08 Layouts and content_for"></a>#08 Layouts and content_for</h2><p>content_for 用于定制网页特定的内容，</p><p>content_for 接受一个名称参数及代码块定义。代码块逻辑生成的内容将会被加载到布局文件中。</p><p>content_for 为我们提供在 Action 中定制布局文件定义的能力。诸如为某些指定的 Action 中增加用于显示菜单，滚动条等效果的 CSS 引用等。</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- projects/index.rhtml --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">content_for</span> <span class="attr">:head</span> <span class="attr">do</span> %&gt;</span> <span class="tag">&lt;<span class="name">%=</span> <span class="attr">stylesheet_link_tag</span> '<span class="attr">projects</span>' %&gt;</span> <span class="tag">&lt;<span class="name">%</span> <span class="attr">end</span> %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- layouts/application.rhtml --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Todo List<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%=</span> <span class="attr">stylesheet_link_tag</span> '<span class="attr">application</span>' %&gt;</span> <span class="tag">&lt;<span class="name">%=</span> <span class="attr">yield</span> <span class="attr">:head</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="10-11-12-Refactoring-User-Name"><a href="#10-11-12-Refactoring-User-Name" class="headerlink" title="#10 11 12 Refactoring User Name"></a>#10 11 12 Refactoring User Name</h2><h3 id="重构"><a href="#重构" class="headerlink" title="重构"></a>重构</h3><p>把通用的逻辑抽取到一个工具方法中。</p><p>页面 view 中重复的逻辑，抽取到了 model 中。</p><p>需要重构的页面代码</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Users<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%</span> <span class="attr">for</span> <span class="attr">user</span> <span class="attr">in</span> @<span class="attr">users</span> %&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%= user_path(user) %&gt;"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">%=</span> <span class="attr">user.first_name</span> %&gt;</span> <span class="tag">&lt;<span class="name">%=</span> "#{<span class="attr">user.middle_initial</span>}<span class="attr">.</span>" <span class="attr">unless</span></span></span><br><span class="line"><span class="tag">      <span class="attr">user.middle_initial.nil</span>? %&gt;</span> <span class="tag">&lt;<span class="name">%=</span> <span class="attr">user.last_name</span> %&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%</span> <span class="attr">end</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>资料页面</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;Profile&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;</span></span><br><span class="line"><span class="regexp">  Name:</span></span><br><span class="line"><span class="regexp">  &lt;%= @user.first_name %&gt;</span></span><br><span class="line"><span class="regexp">  &lt;%= "<span class="subst">#{@user.middle_initial}</span>." unless @user.middle_initial.nil? %&gt;</span></span><br><span class="line"><span class="regexp">  &lt;%= @user.last_name %&gt;</span></span><br><span class="line"><span class="regexp">&lt;/p</span>&gt;</span><br><span class="line">&lt;%= link_to <span class="string">'Users List'</span>, users_path %&gt;</span><br></pre></td></tr></tbody></table></figure><p>两处代码中出现重复的内容，这时候就需要重构了。</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> &lt; ActiveRecord::Base</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">full_name</span></span></span><br><span class="line">    name = first_name + <span class="string">' '</span></span><br><span class="line">      name += <span class="string">"<span class="subst">#{middle_initial}</span>. "</span> <span class="keyword">unless</span> middle_initial.<span class="literal">nil</span>?</span><br><span class="line">      name += last_name</span><br><span class="line">      name</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">&lt;h1&gt;Users&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">&lt;ul&gt;</span></span><br><span class="line"><span class="regexp">&lt;% for user in @users %&gt;</span></span><br><span class="line"><span class="regexp">    &lt;li&gt;&lt;%= link_to user.full_name %&gt;&lt;/li</span>&gt;</span><br><span class="line">&lt;% <span class="keyword">end</span> %&gt;</span><br><span class="line">&lt;<span class="regexp">/ul&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>有<a>标签的都用 link_to.</a></p><p>用测试来保障重构。</p><p>ruby 有 ruby 的编程方法，和 c 系语言完全不同，区别的根源就是迭代器的使用。</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> &lt; ActiveRecord::Base</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">full_name</span></span></span><br><span class="line">    [first_name, middle_initial_with_full_stop, last_name].compact.join(<span class="string">' '</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">middle_initial_with_full_stop</span></span></span><br><span class="line">    <span class="string">"<span class="subst">#{middle_initial}</span>."</span> <span class="keyword">unless</span> middle_initial.blank?</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> railscast </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>是如何实现的？”</title>
      <link href="/2019/10/24/%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84%EF%BC%9F%E2%80%9D/"/>
      <url>/2019/10/24/%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84%EF%BC%9F%E2%80%9D/</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>railscast 学习</title>
      <link href="/2019/10/23/railscast-101/"/>
      <url>/2019/10/23/railscast-101/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Caching-with-Instance-Variables"><a href="#1-Caching-with-Instance-Variables" class="headerlink" title="#1 Caching with Instance Variables"></a>#1 Caching with Instance Variables</h2><p>尽量少用数据库查询，查询出来的东西能复用的要复用。怎么复用？保存在实例变量中。</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ApplicationController</span> &amp;<span class="title">lt</span>;</span> ActionController::Base</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">current_user</span></span></span><br><span class="line">    @current_user <span class="params">||</span>= User.find(session[<span class="symbol">:user_id</span>]) <span class="comment"># 这里面的逻辑还是有点绕的</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></tbody></table></figure><h2 id="2-Dynamic-find-by-Methods"><a href="#2-Dynamic-find-by-Methods" class="headerlink" title="#2 Dynamic find_by Methods"></a>#2 Dynamic find_by Methods</h2><p>过时了，现在都直接用 find_by.</p><h2 id="3-Find-Through-Association"><a href="#3-Find-Through-Association" class="headerlink" title="#3 Find Through Association"></a>#3 Find Through Association</h2><p>seeds.rb : 可以做些复杂的事情。</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">happy = Project.create(<span class="symbol">name:</span> <span class="string">'Be Happy'</span>)</span><br><span class="line">happy.tasks.create(<span class="symbol">name:</span> <span class="string">'Buy a puppy'</span>, <span class="symbol">complete:</span> <span class="literal">false</span>)</span><br><span class="line">happy.tasks.create(<span class="symbol">name:</span> <span class="string">'Dance in the rain'</span>, <span class="symbol">complete:</span> <span class="literal">true</span>)</span><br></pre></td></tr></tbody></table></figure><p>找到第一个 project 中未完成的任务：</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = Task.where(<span class="symbol">project_id:</span> <span class="number">1</span>).where(<span class="symbol">complete:</span> <span class="literal">false</span>) <span class="comment">#方法1</span></span><br><span class="line"></span><br><span class="line">p = Project.find <span class="number">1</span></span><br><span class="line">p.tasks.where(<span class="symbol">complete:</span> <span class="literal">false</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="4-Move-Find-into-Model"><a href="#4-Move-Find-into-Model" class="headerlink" title="#4 Move Find into Model"></a>#4 Move Find into Model</h2><p>index action 中，排序查找什么的，不要放在 controller 中了，model 的事情交给 model 做，这样 controller 中如果有多个地方想用这个查询，放在模型中就可以复用这个查询代码了。<br>注意模型中，是类方法，方法名前面加 self。<br>新版本中用 scopes 取代了这种方法，代码量小的可以用，更简洁。</p><h2 id="5-scope"><a href="#5-scope" class="headerlink" title="#5 scope"></a>#5 scope</h2><p>scope 将常用的查询条件定义成方法。</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Post</span> &lt; ActiveRecord::Base</span></span><br><span class="line">  scope <span class="symbol">:published</span>, -&gt; { where(<span class="symbol">published:</span> <span class="literal">true</span>) }</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Post</span> &lt; ActiveRecord::Base</span></span><br><span class="line">  scope <span class="symbol">:created_before</span>, -&gt;(time) { where(<span class="string">"created_at &lt; ?"</span>, time) }</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">Post.created_before(Time.zone.now) <span class="comment">#需要动态参数时，还是用方法比较合适。</span></span><br></pre></td></tr></tbody></table></figure><h2 id="7-Layouts"><a href="#7-Layouts" class="headerlink" title="#7 Layouts"></a>#7 Layouts</h2><h3 id="动态布局"><a href="#动态布局" class="headerlink" title="动态布局"></a>动态布局</h3><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsersController</span></span></span><br><span class="line"></span><br><span class="line">  layout  <span class="symbol">:choose_layout</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">index</span></span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">new</span></span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  protected</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">choose_layout</span></span></span><br><span class="line">    <span class="keyword">if</span> current_user.admin?</span><br><span class="line">      “admin”</span><br><span class="line">    elseif current_user.user?</span><br><span class="line">      “user”</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      “application”</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></tbody></table></figure><h3 id="指定布局"><a href="#指定布局" class="headerlink" title="指定布局"></a>指定布局</h3><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsersController</span></span></span><br><span class="line">  layout  “my_layout”</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsersController</span></span></span><br><span class="line">  layout  <span class="literal">nil</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsersController</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">index</span></span></span><br><span class="line">    render <span class="symbol">:layout</span> =&gt; <span class="string">'my_layout'</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsersController</span></span></span><br><span class="line">  layout  “my_layout”, : only =&gt;  <span class="symbol">:method_name</span></span><br><span class="line">  layout  “my_layout”, <span class="symbol">:except</span> =&gt; [ <span class="symbol">:my_method1</span>, <span class="symbol">:my_method2</span> ]</span><br><span class="line"></span><br><span class="line">  layout  <span class="symbol">:my_layout</span>,  : only =&gt; <span class="symbol">:my_method</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rails </tag>
            
            <tag> railscast </tag>
            
            <tag> study </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>New Start</title>
      <link href="/2019/10/22/hello-world/"/>
      <url>/2019/10/22/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="新的开始"><a href="#新的开始" class="headerlink" title="新的开始"></a>新的开始</h2><p>40 岁，是时候改变一下了，虽然晚了，但总比等死强。<br>勿忘初心。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diary </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
